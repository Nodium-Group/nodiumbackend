name: Nodium Backend CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test & Build Maven Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 18
        uses: actions/setup-java@v2
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven

      - name: Maven Clean & Package (Skip Tests)
        run: mvn -B clean package -DskipTests

  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 18
        uses: actions/setup-java@v2
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven

      - name: Maven Package (Skip Tests)
        run: mvn -B package -DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image to Docker Hub
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nodium:latest

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            --data '{"clearCache": false}' \
            https://api.render.com/v1/services/$SERVICE_ID/deploys
